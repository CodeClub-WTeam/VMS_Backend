generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Estate {
  id                  String        @id @db.Uuid
  name                String        @db.VarChar(255)
  address             String?
  isActive            Boolean?      @default(true) @map("is_active")
  createdAt           DateTime      @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime      @updatedAt @map("updated_at") @db.Timestamptz(6)
  admins              Admin[]
  homes               Home[]
  invitations         invitations[]
  securityCredentials Security[]

  @@map("estates")
}

model Home {
  id           String        @id @db.Uuid
  estateId     String        @map("estate_id") @db.Uuid
  name         String        @db.VarChar(255)
  plotNumber   String        @map("plot_number") @db.VarChar(50)
  street       String        @db.VarChar(255)
  contactEmail String?       @map("contact_email") @db.VarChar(255)
  contactPhone String?       @map("contact_phone") @db.VarChar(20)
  isActive     Boolean?      @default(true) @map("is_active")
  createdAt    DateTime      @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime      @updatedAt @map("updated_at") @db.Timestamptz(6)
  estate       Estate        @relation(fields: [estateId], references: [id], onDelete: Cascade)
  invitations  invitations[]
  residents    Resident[]

  @@unique([estateId, plotNumber], map: "homes_estate_id_plot_number")
  @@index([estateId], map: "homes_estate_id")
  @@index([plotNumber], map: "homes_plot_number")
  @@map("homes")
}

model Resident {
  id             String                 @id @db.Uuid
  homeId         String                 @map("home_id") @db.Uuid
  firstName      String                 @map("first_name") @db.VarChar(100)
  lastName       String                 @map("last_name") @db.VarChar(100)
  email          String                 @unique(map: "residents_email") @db.VarChar(255)
  phone          String?                @db.VarChar(20)
  profilePicture String?                @map("profile_picture")
  passwordHash   String                 @map("password_hash") @db.VarChar(255)
  status         enum_residents_status? @default(active)
  role           String?                @default("resident") @db.VarChar(20)
  lastLogin      DateTime?              @map("last_login") @db.Timestamptz(6)
  createdAt      DateTime               @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime               @updatedAt @map("updated_at") @db.Timestamptz(6)
  accessCodes    AccessCode[]
  entryLogs      EntryLog[]
  home           Home                   @relation(fields: [homeId], references: [id], onDelete: Cascade)

  @@index([homeId], map: "residents_home_id")
  @@index([status], map: "residents_status")
  @@map("residents")
}

model Admin {
  id             String            @id @db.Uuid
  estateId       String?           @map("estate_id") @db.Uuid
  firstName      String            @map("first_name") @db.VarChar(100)
  lastName       String            @map("last_name") @db.VarChar(100)
  email          String            @unique(map: "admins_email") @db.VarChar(255)
  phone          String?           @db.VarChar(20)
  profilePicture String?           @map("profile_picture")
  passwordHash   String            @map("password_hash") @db.VarChar(255)
  role           enum_admins_role? @default(estate_manager)
  lastLogin      DateTime?         @map("last_login") @db.Timestamptz(6)
  createdAt      DateTime          @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime          @updatedAt @map("updated_at") @db.Timestamptz(6)
  estate         Estate?           @relation(fields: [estateId], references: [id])
  invitations    invitations[]

  @@index([estateId], map: "admins_estate_id")
  @@map("admins")
}

model Security {
  id                 String     @id @db.Uuid
  estateId           String     @map("estate_id") @db.Uuid
  firstName          String     @map("first_name") @db.VarChar(100)
  lastName           String     @map("last_name") @db.VarChar(100)
  email              String     @unique(map: "security_credentials_email") @db.VarChar(255)
  phone              String?    @db.VarChar(20)
  profilePicture     String?    @map("profile_picture")
  passwordHash       String     @map("password_hash") @db.VarChar(255)
  lastPasswordChange DateTime?  @map("last_password_change") @db.Timestamptz(6)
  lastLogin          DateTime?  @map("last_login") @db.Timestamptz(6)
  createdAt          DateTime   @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime   @updatedAt @map("updated_at") @db.Timestamptz(6)
  entryLogs          EntryLog[]
  estate             Estate     @relation(fields: [estateId], references: [id], onDelete: Cascade)

  @@index([estateId], map: "security_credentials_estate_id")
  @@map("security_credentials")
}

model AccessCode {
  id          String                    @id @db.Uuid
  code        String                    @db.VarChar(5)
  residentId  String                    @map("resident_id") @db.Uuid
  visitDate   DateTime                  @map("visit_date") @db.Date
  startTime   DateTime                  @map("start_time") @db.Time(6)
  endTime     DateTime                  @map("end_time") @db.Time(6)
  visitorName String?                   @map("visitor_name") @db.VarChar(255)
  status      enum_access_codes_status? @default(active)
  qrCodeData  String?                   @map("qr_code_data")
  usedAt      DateTime?                 @map("used_at") @db.Timestamptz(6)
  cancelledAt DateTime?                 @map("cancelled_at") @db.Timestamptz(6)
  createdAt   DateTime                  @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime                  @updatedAt @map("updated_at") @db.Timestamptz(6)
  resident    Resident                  @relation(fields: [residentId], references: [id], onDelete: Cascade)
  entryLogs   EntryLog[]

  @@index([code], map: "access_codes_code")
  @@index([residentId], map: "access_codes_resident_id")
  @@index([status], map: "access_codes_status")
  @@index([visitDate], map: "access_codes_visit_date")
  @@index([visitDate, status], map: "access_codes_visit_date_status")
  @@map("access_codes")
}

model EntryLog {
  id           String                 @id @db.Uuid
  accessCodeId String?                @map("access_code_id") @db.Uuid
  code         String                 @db.VarChar(5)
  residentId   String?                @map("resident_id") @db.Uuid
  securityId   String?                @map("security_id") @db.Uuid
  result       enum_entry_logs_result
  reason       String?                @db.VarChar(255)
  reasonCode   String?                @map("reason_code") @db.VarChar(50)
  gate         String?                @default("Main Gate") @db.VarChar(100)
  validatedAt  DateTime?              @map("validated_at") @db.Timestamptz(6)
  createdAt    DateTime               @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime               @updatedAt @map("updated_at") @db.Timestamptz(6)
  accessCode   AccessCode?            @relation(fields: [accessCodeId], references: [id])
  resident     Resident?              @relation(fields: [residentId], references: [id])
  security     Security?              @relation(fields: [securityId], references: [id])

  @@index([accessCodeId], map: "entry_logs_access_code_id")
  @@index([residentId], map: "entry_logs_resident_id")
  @@index([result], map: "entry_logs_result")
  @@index([validatedAt], map: "entry_logs_validated_at")
  @@index([validatedAt, result], map: "entry_logs_validated_at_result")
  @@map("entry_logs")
}

model invitations {
  id          String                   @id @db.Uuid
  email       String                   @db.VarChar(255)
  token       String                   @unique(map: "invitations_token") @db.VarChar(255)
  role        enum_invitations_role
  estate_id   String?                  @db.Uuid
  home_id     String?                  @db.Uuid
  status      enum_invitations_status? @default(pending)
  expires_at  DateTime                 @db.Timestamptz(6)
  invited_by  String?                  @db.Uuid
  accepted_at DateTime?                @db.Timestamptz(6)
  created_at  DateTime                 @db.Timestamptz(6)
  updated_at  DateTime                 @db.Timestamptz(6)
  estates     Estate?                  @relation(fields: [estate_id], references: [id])
  homes       Home?                    @relation(fields: [home_id], references: [id])
  admins      Admin?                   @relation(fields: [invited_by], references: [id])

  @@index([email], map: "invitations_email")
  @@index([expires_at], map: "invitations_expires_at")
  @@index([status], map: "invitations_status")
}

enum enum_access_codes_status {
  active
  used
  expired
  cancelled
}

enum enum_admins_role {
  superadmin
  estate_manager
}

enum enum_entry_logs_result {
  granted
  denied
}

enum enum_invitations_role {
  superadmin
  estate_manager
  security
  resident
}

enum enum_invitations_status {
  pending
  accepted
  expired
  cancelled
}

enum enum_residents_status {
  active
  inactive
}
